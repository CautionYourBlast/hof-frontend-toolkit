#!/usr/bin/env node

var path = require('path'),
    fs = require('fs'),
    cp = require('child_process'),
    mustache = require('mustache'),
    async = require('async');

var GOVUK_TOOLKIT = path.dirname(require.resolve('govuk_frontend_toolkit/package.json')),
    GOVUK_ELEMENTS = path.dirname(require.resolve('govuk-elements-sass/package.json'));

function renderTemplate(name) {
    var file = './assets/stylesheets/' + name + '.scss',
        src = {
            toolkit: path.resolve(GOVUK_TOOLKIT, './stylesheets/'),
            elements: path.resolve(GOVUK_ELEMENTS, './public/sass/elements/')
        };

    return function (callback) {
        fs.readFile(path.resolve(__dirname, file + '.tpl'), function (err, input) {
            if (err) {
                callback(err);
            } else {
                fs.writeFile(path.resolve(__dirname, file), mustache.render(input.toString(), {
                    'govuk-toolkit-path': src.toolkit,
                    'govuk-elements-path': src.elements
                }), function (err) {
                    if (err) {
                        callback(err);
                    } else {
                        callback();
                    }
                });
            }
        });
    };
}

function copyImages(callback) {
    var src = path.resolve(GOVUK_TOOLKIT, './images/');

    fs.mkdir(path.resolve(__dirname, './assets/images/icons'), function (err) {
        if (err && err.code !== 'EEXIST') {
            callback(err);
        } else {
            cp.exec('cp -R ' + src + '/* ./assets/images/icons/', callback);
        }
    });

}

async.series([
    renderTemplate('mixins'),
    renderTemplate('govuk-elements'),
    copyImages
], function (err) {
    if (err) {
        throw err;
    }
});
